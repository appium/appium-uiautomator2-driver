name: Functional Tests

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
        - chromedriverVersion: "113.0.5672.63"
          apiLevel: 32
          emuTag: google_apis
          arch: x86_64
        - chromedriverVersion: "83.0.4103.39"
          apiLevel: 30
          emuTag: google_apis
          arch: x86
        - chromedriverVersion: "2.44"
          apiLevel: 28
          emuTag: default
          arch: x86
        - chromedriverVersion: "2.20"
          apiLevel: 23
          emuTag: default
          arch: x86

    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4567
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      _FORCE_LOGS: 1
      TEST_PASS_THRESHOLD: 10
    # No hardware acceleration is available for emulators on Ubuntu:
    # https://github.com/marketplace/actions/android-emulator-runner#can-i-use-this-action-on-linux-vms
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
        check-latest: true
    - run: |
        brew install xq
        npm install mocha-multi-reporters --save-dev
        npm install -g appium@next
        npm install --no-save mjpeg-consumer
      name: Install dev dependencies
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - run: |
        cwd=$(pwd)
        pushd "$cwd"
        cd ~
        CHROMEDRIVER_VERSION="${{ matrix.chromedriverVersion }}" appium driver install --source=local "$cwd"
        nohup appium server \
          --port=$APPIUM_TEST_SERVER_PORT \
          --address=$APPIUM_TEST_SERVER_HOST \
          --relaxed-security \
          --log-no-colors \
          --log-timestamp \
          2>&1 > "$cwd/appium.log" &
        popd
      name: Start Appium server
    - run: nohup adb logcat > logcat.log &
      name: Capture logcat
    - uses: reactivecircus/android-emulator-runner@v2
      name: e2e_api${{ matrix.apiLevel }}
      with:
        script: |
          export RESULTS_XML=test-results.xml
          echo "{\"reporterEnabled\": \"spec, xunit\", \"xunitReporterOptions\": {\"output\": \"$RESULTS_XML\"}}" > reporter_config.json
          ARGS=(./test/functional/driver-e2e-specs.js \
          ./test/functional/commands \
          ./test/functional/commands/find \
          ./test/functional/commands/general \
          ./test/functional/commands/keyboard \
          --exit --timeout 10m \
          --reporter mocha-multi-reporters --reporter-options configFile=reporter_config.json)
          if ! npx mocha "${ARGS[@]}"; then
            tests=$(cat "$RESULTS_XML" | xq --xpath '//testsuite/@tests')
            errors=$(cat "$RESULTS_XML" | xq --xpath '//testsuite/@errors')
            skipped=$(cat "$RESULTS_XML" | xq --xpath '//testsuite/@skipped')
            failures=$(cat "$RESULTS_XML" | xq --xpath '//testsuite/@failures')
            threshold=$(( (failures + errors) * 100 / (tests - skipped) ))
            cat "$RESULTS_XML"
            if [[ $threshold -gt $TEST_PASS_THRESHOLD ]]; then
              echo "${threshold}% of tests failed"
              exit 1
            else
              echo "${threshold}% of tests failed. This is (probably) fine"
            fi
          fi
        avd-name: ${{ env.ANDROID_AVD }}
        sdcard-path-or-size: 1500M
        api-level: ${{ matrix.apiLevel }}
        disable-spellchecker: true
        target: ${{ matrix.emuTag }}
        arch: ${{ matrix.arch }}
        ram-size: 4096M
        heap-size: 1024M
    - name: Save logcat output
      if: ${{ always() }}
      uses: actions/upload-artifact@master
      with:
        name: logcat-api${{ matrix.apiLevel }}
        path: logcat.log
    - name: Save server output
      if: ${{ always() }}
      uses: actions/upload-artifact@master
      with:
        name: appium-api${{ matrix.apiLevel }}
        path: appium.log
