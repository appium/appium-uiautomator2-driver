language: android
dist: precise
addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-4.9
android:
  components:
    # use the latest revision of Android SDK Tools
    - platform-tools
    - tools

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-22
env:
  global:
    - NODE_VERSION=6
    - _FORCE_LOGS=1
    - DEVICE=android
    - MOCHA_TIMEOUT=640000
    - RECURSIVE=
    - START_EMU=1
    - ANDROID_EMU_NAME=test
    - ANDROID_EMU_TARGET=android-21
    - ANDROID_EMU_ABI=armeabi-v7a
    - CC=gcc-4.9 CXX=g++-4.9
  matrix:
    - START_EMU=0 RECURSIVE=--recursive TEST=unit COVERALLS=1
    - TEST=functional
    - TEST=functional/commands
    - TEST=functional/commands/find
    - TEST=functional/commands/keyboard
    - TEST=functional/commands/general
before_install:
  - |
    if [ ${START_EMU} = "1" ]; then
      echo y | android update sdk --no-ui -t platform-tools;
      echo y | android update sdk --no-ui -t tools;
      echo no | android create avd --force -n ${ANDROID_EMU_NAME} -t ${ANDROID_EMU_TARGET} --abi ${ANDROID_EMU_ABI} --sdcard 200M;
      QEMU_AUDIO_DRV=none emulator -avd ${ANDROID_EMU_NAME} -no-window &
    fi
install:
  # node stuff
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
  - nvm install 6
  - node --version
  - npm --version
  - npm install appium-test-support # get the travis emu scripts

  - SERVER_INSTALL_ATTEMPTS=50 npm install

  # for chromedriver
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test --yes
  - sudo apt-get update
  - sudo apt-get install libstdc++6-4.7-dev

  # for mjpeg stuff
  - npm install --no-save mjpeg-consumer
before_script:
  - |
    if [ ${START_EMU} = "1" ]; then
      # make sure emulator started
      $(npm bin)/android-emu-travis-post;
      sleep 30
    fi
script:
  - npm run lint && npm run mocha -- -t $MOCHA_TIMEOUT -R spec $RECURSIVE build/test/$TEST -ig @skip-ci --exit
after_success:
  - if [ -n "$COVERALLS" ]; then _FORCE_LOGS=0 npm run coverage; fi
